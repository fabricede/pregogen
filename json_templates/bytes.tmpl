// {{- /* Go Template */ -}}.
{{define "bytevalue"}}
    {{$seqstart := 0 -}}
    {{- if eq .FieldType "int8" -}}
        {{- $seqstart = -128 -}}
    {{- end -}}
    switch {{.Value}} {
        {{ range seq $seqstart 256 -}}
    case {{.}}:
        {{ method $.Method $.Start $.Header }}{{$.JSONName}}{{$.Begin}}{{.}}{{$.End}}{{ method $.Method $.Stop $.Final }}
        {{- end -}}
    }
{{end}}

{{- define "bytevalues" -}}
var byteValue_{{.Method}} map[byte]string

func init() {
	byteValue_{{.Method}} = make(map[byte]string)
	for i := 0; i < 256; i++ {
		byteValue_{{.Method}}[byte(i)] = strconv.Itoa(int(i))
	}
}
{{- end -}}

{{- define "bytebis" -}}
    {{- method .Method .Start .Header }}{{.JSONName}}{{ method .Method .Stop "\"" -}}
    {{ method .Method "start" "" }}byteValue_{{.Method}}[{{.Value}}]{{ method .Method "stop" "" -}}
    {{ if eq .Last "true" -}}
        {{ method .Method "start" "" }}"}"{{ method .Method "stop" "" }}
    {{- end -}}
{{ end -}}
